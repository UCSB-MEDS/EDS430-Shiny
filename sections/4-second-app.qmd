---
format: revealjs
---

##  {#build-app2 data-menu-title="Building Out Your 2nd App" background="#053660"}

<div class="page-center vertical-center">
<p class="custom-subtitle bottombr">`r fontawesome::fa("tools", fill = "#d2e3f3", a11y = "sem")` Building out your 2nd app</p>
<p class="caption-text">*Up until now, we've been adding our text and widgets in a pretty unstructured way -- elements are stacked on top of one another within a single column. Next up, we'll learn how to customize the layout of our app to make it a bit more visually pleasing.*</p>
</div>

---

##  {#LO2 data-menu-title="Learning Objectives 2"}

<div class="slide-title">`r fontawesome::fa("book-open", fill = "#05859B", a11y = "sem")` Learning Objectives for App #2</div>

<p class="medium-body-text bottombr">By the end of building out this second app, you should:</p>

. . . 

<p class="small-text">`r fontawesome::fa("angle-right", fill = "#05859B", a11y = "sem")` be comfortable creating a shiny app using the two-file (`ui.R` & `server.R`) format</p>

. . .

<p class="small-text">`r fontawesome::fa("angle-right", fill = "#05859B", a11y = "sem")` understand how to use layout functions to customize the visual structure of your app's UI</p>

. .  .

<p class="small-text">`r fontawesome::fa("angle-right", fill = "#05859B", a11y = "sem")` have more practice building reactive outputs -- and placing them within the layout structure of your app</p>

. . . 

<p class="small-text">`r fontawesome::fa("angle-right", fill = "#05859B", a11y = "sem")` be using shiny extension packages to improve the appearance and overall user experience of your app</p>

. .  .

<p class="medium-body-text topbr">New packages used:</p> 

. . .

<p class="small-text">`r fontawesome::fa("box-open", fill = "#05859B", a11y = "sem")` `{shinyWidgets}`: extend shiny widgets with some different, fun options</p>

. . . 

<p class="small-text">`r fontawesome::fa("box-open", fill = "#05859B", a11y = "sem")` `{shinycssloaders}`: add loading animations to shiny outputs</p>

. . . 

<p class="small-text">`r fontawesome::fa("box-open", fill = "#05859B", a11y = "sem")` `{plotly}`: leverage plotly's interactive features within your shiny app</p>

. . .

<p class="small-text">`r fontawesome::fa("box-open", fill = "#05859B", a11y = "sem")` `{bslib}`: create custom themes</p>

---

##  {#two-source data-menu-title="Two source panes"}

<div class="slide-title">Two files? Try two panes!</div>

<p class="body-text bottombr">You can open multiple scripts up side-by-side by navigating to **Tools** > **Global Options** > **Pane Layout** > **Add Column**</p>

<center><img src="images/two_source.png" alt="RStudio with three columns. (From left to right): (1) a source pane with `ui.R` open (2) a second source pane on the top with `server.R` open and the console on the bottom, (3) Environment/History/Git/etc. on the top and Files/Plots/Packages/etc. on the bottom" width="650"/></center>

<p class="body-text topbr">This setup is certainly not required/necessary -- organize your IDE however you work best!</p>
